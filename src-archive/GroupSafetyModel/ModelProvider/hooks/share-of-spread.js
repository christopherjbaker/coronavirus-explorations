const sources = [
  'foreign',
  'foreign',
  'foreign',
  'foreign',
  'foreign',
  'community',
  'foreign',
  'foreign',
  'community',
  'community',
  'community',
  'community',
  'foreign',
  'community',
  'foreign',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'foreign',
  'foreign',
  'community',
  'community',
  'community',
  'foreign',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
  'community',
]

const counts = { foreign: 0, community: 0 }
const data = sources.map((source) => {
  counts[source]++

  const total = counts.foreign + counts.community

  return {
    foreign: counts.foreign / total,
    community: counts.community / total,
  }
})

export default function useShareOfSpread(cases) {
  if (!cases) return null

  // data is 0-indexed
  return data[Math.min(cases - 1, data.length - 2)]
}
