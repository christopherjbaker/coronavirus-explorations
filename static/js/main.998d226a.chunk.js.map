{"version":3,"sources":["components/ThemeProvider/ThemeProvider.js","components/Layout/Layout.js","components/Icon/Icon.js","scenes/Recommendations/Recommendations.js","index.js","scenes/Info/Info.js","scenes/NotFound/NotFound.js"],"names":["theme","createMuiTheme","overrides","MuiTypography","h1","fontSize","fontWeight","h2","h3","h4","h5","h6","MuiIcon","root","width","textAlign","tabs","label","to","exact","variants","solid","regular","light","duotone","brands","Icon","className","name","title","variant","color","size","props","Tooltip","aria-hidden","cx","defaultProps","levels","test","threshold","today","severity","tomorrow","week","useStyles","makeStyles","whiteSpace","pDeaths","population","employees","deaths","nToday","pToday","pTomorrow","pWeek","ReactDOM","render","basename","process","children","pathname","useLocation","tab","findIndex","path","matchPath","Container","maxWidth","CssBaseline","Typography","gutterBottom","AppBar","position","Tabs","value","map","Tab","key","component","RouterLink","Paper","Box","p","paragraph","classes","useState","risk","setRisk","setEmployees","setPopulation","cases","setCases","setDeaths","probabilities","useMemo","levelCases","find","levelDeaths","Grid","container","spacing","item","xs","md","Alert","elevation","sm","TextField","id","type","fullWidth","onChange","e","target","InputLabelProps","InputProps","startAdornment","InputAdornment","Button","document","getElementById"],"mappings":"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","file":"static/js/main.998d226a.chunk.js","sourcesContent":["import { createMuiTheme, ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiTypography: {\n      h1: {\n        fontSize: '3.25rem',\n        fontWeight: 300,\n      },\n      h2: {\n        fontSize: '2.75rem',\n        fontWeight: 300,\n      },\n      h3: {\n        fontSize: '2.25rem',\n        fontWeight: 400,\n      },\n      h4: {\n        fontSize: '2rem',\n        fontWeight: 400,\n      },\n      h5: {\n        fontSize: '1.5rem',\n        fontWeight: 400,\n      },\n      h6: {\n        fontSize: '1.25rem',\n        fontWeight: 500,\n      },\n    },\n    MuiIcon: {\n      root: {\n        width: '1.25em',\n        textAlign: 'center',\n      },\n    },\n  },\n})\n\nexport default function ThemeProvider({ children }) {\n  return (\n    <MuiThemeProvider theme={theme}>\n      {children}\n    </MuiThemeProvider>\n  )\n}\n\nThemeProvider.propTypes = {\n  /** Child elements of this component. */\n  children: PropTypes.node.isRequired,\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { Link as RouterLink, useLocation, matchPath } from 'react-router-dom'\nimport {\n  CssBaseline,\n  AppBar,\n  Box,\n  Container,\n  Paper,\n  Tabs,\n  Tab,\n  Typography,\n} from '@material-ui/core'\n\nconst tabs = [\n  { label: 'Info', to: '/', exact: true },\n  { label: 'Recommendations', to: '/recommendations' },\n]\n\nexport default function Layout({ children, ...props }) {\n  const { pathname } = useLocation()\n\n  const tab = tabs.findIndex(({ to: path, ...props }) => matchPath(pathname, { path, ...props }))\n\n  return (\n    <Container maxWidth=\"md\" {...props}>\n      <CssBaseline />\n      <Typography variant=\"h1\" gutterBottom>Coronavirus Work From Home Model</Typography>\n\n      <AppBar position=\"static\">\n        <Tabs value={tab < 0 ? false : tab}>\n          {tabs.map(({ label, to }) => (\n            <Tab\n              key={to}\n              component={RouterLink}\n              to={to}\n              label={label}\n            />\n          ))}\n        </Tabs>\n      </AppBar>\n\n      <Paper>\n        <Box p={3}>\n          {children}\n        </Box>\n      </Paper>\n    </Container>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n","import { Icon as BaseIcon, Tooltip } from '@material-ui/core'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport '@fortawesome/fontawesome-pro/css/all.css'\n\nconst variants = {\n  solid: 'fas',\n  regular: 'far',\n  light: 'fal',\n  duotone: 'fad',\n  brands: 'fab',\n}\n\nexport default function Icon({\n  className,\n  name,\n  title,\n  variant,\n  color,\n  size,\n  ...props\n}) {\n  if (title) {\n    return (\n      <Tooltip title={title}>\n        <BaseIcon\n          {...props}\n          aria-hidden={false}\n          className={cx(className, `${variants[variant]} fa-${name}`)}\n          color={color}\n          fontSize={size}\n        />\n      </Tooltip>\n    )\n  }\n\n  return (\n    <BaseIcon\n      {...props}\n      aria-hidden={false}\n      className={cx(className, `${variants[variant]} fa-${name}`)}\n      color={color}\n      fontSize={size}\n    />\n  )\n}\n\nIcon.defaultProps = {\n  variant: 'solid',\n}\n\nIcon.propTypes = {\n  /** A class to apply to the element. */\n  className: PropTypes.string,\n\n  /** The name of the icon. */\n  name: PropTypes.string.isRequired,\n  /** The icon title. */\n  title: PropTypes.string,\n  /** The name of the icon. */\n  variant: PropTypes.oneOf(Object.keys(variants)),\n  /** The size to show the icon. */\n  color: PropTypes.oneOf([ 'primary', 'secondary', 'action', 'error', 'disabled' ]),\n  /** The color to show the icon. */\n  size: PropTypes.oneOf([ 'default', 'small', 'large' ]),\n}\n","/* istanbul ignore file */\n/* eslint-disable max-len */\nimport React, { useMemo, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Grid, InputAdornment, TextField, Typography } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\n\nimport Icon from '../../components/Icon/Icon'\n\nconst levels = [\n  { test: (threshold, { today }) => today > threshold, severity: 'error', label: 'Close immediately!' },\n  { test: (threshold, { tomorrow }) => tomorrow > threshold, severity: 'warning', label: 'Close before tomorrow.' },\n  { test: (threshold, { week }) => week > threshold, severity: 'info', label: 'Close within a week.' },\n  { test: () => true, severity: 'success', label: 'No need to close this coming week.' },\n]\n\nconst useStyles = makeStyles(() => ({\n  label: {\n    whiteSpace: 'nowrap',\n  },\n}))\n\nexport default function Recommendations() {\n  const classes = useStyles()\n\n  const [ risk, setRisk ] = useState('')\n  const [ employees, setEmployees ] = useState('')\n  const [ population, setPopulation ] = useState('')\n  const [ cases, setCases ] = useState('')\n  const [ deaths, setDeaths ] = useState('')\n\n  const probabilities = useMemo(() => {\n    if (!employees || !population) return null\n    if (!cases && !deaths) return null\n\n    return {\n      // cases: cases ? pCases(population, employees, cases) : null,\n      deaths: deaths ? pDeaths(population, employees, deaths) : null,\n    }\n  }, [ employees, population, cases, deaths ])\n\n  const levelCases = risk && probabilities && probabilities.cases && levels.find(({ test }) => test(risk / 100, probabilities.cases))\n  const levelDeaths = risk && probabilities && probabilities.deaths && levels.find(({ test }) => test(risk / 100, probabilities.deaths))\n\n  return (\n    <div>\n      <Typography variant=\"h2\" gutterBottom>When should you close your office?</Typography>\n\n      <Grid container spacing={4}>\n        {risk && probabilities ? (\n          <>\n            <Grid item xs={12} md={6}>\n              {levelCases ? (\n                <Alert\n                  variant=\"filled\"\n                  elevation={6}\n                  severity={levelCases.severity}\n                >\n                  {levelCases.label} Click for more information.\n                </Alert>\n              ) : (\n                <Alert\n                  variant=\"standard\"\n                  elevation={6}\n                  severity=\"info\"\n                >\n                  Enter the number of cases for a recommendation.\n                </Alert>\n              )}\n            </Grid>\n            <Grid item xs={12} md={6}>\n              {levelDeaths ? (\n                <Alert\n                  variant=\"filled\"\n                  elevation={6}\n                  severity={levelDeaths.severity}\n                >\n                  {levelDeaths.label} Click for more information.\n                </Alert>\n              ) : (\n                <Alert\n                  variant=\"standard\"\n                  elevation={6}\n                  severity=\"info\"\n                >\n                  Enter the number of deaths for a recommendation.\n                </Alert>\n              )}\n            </Grid>\n          </>\n        ) : (\n          <Grid item xs={12}>\n            <Alert\n              variant=\"standard\"\n              elevation={6}\n              severity=\"info\"\n            >\n              Fill out the form to get a recommendation.\n            </Alert>\n          </Grid>\n        )}\n\n        <Grid item xs={12} sm={4}>\n          <TextField\n            id=\"risk\"\n            type=\"number\"\n            fullWidth\n            label=\"What risk are you willing to take?\"\n            value={risk}\n            onChange={(e) => setRisk(e.target.value && +e.target.value)}\n            InputLabelProps={{ className: classes.label }}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Icon name=\"percent\" />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <TextField\n            id=\"employees\"\n            type=\"number\"\n            fullWidth\n            label=\"How many employees do you have?\"\n            value={employees}\n            onChange={(e) => setEmployees(e.target.value && +e.target.value)}\n            InputLabelProps={{ className: classes.label }}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Icon name=\"tally\" />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <TextField\n            id=\"population\"\n            type=\"number\"\n            fullWidth\n            label=\"What is the area population?\"\n            value={population}\n            onChange={(e) => setPopulation(e.target.value && +e.target.value)}\n            InputLabelProps={{ className: classes.label }}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Icon name=\"globe-americas\" />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id=\"cases\"\n            type=\"number\"\n            fullWidth\n            label=\"Total cases as of today\"\n            value={cases}\n            onChange={(e) => setCases(e.target.value && +e.target.value)}\n            InputLabelProps={{ className: classes.label }}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Icon name=\"disease\" />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id=\"deaths\"\n            type=\"number\"\n            fullWidth\n            label=\"Total deaths as of today\"\n            value={deaths}\n            onChange={(e) => setDeaths(e.target.value && +e.target.value)}\n            InputLabelProps={{ className: classes.label }}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Icon name=\"skull-crossbones\" />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nfunction pDeaths(population, employees, deaths) {\n  const pFatality = 0.0087\n  const tDeath = 17.3\n  const tDouble = 6.18\n\n  const nCases = deaths / pFatality\n\n  const nToday = nCases * 2 ** (tDeath / tDouble)\n  const nTomorrow = nToday * 2 ** (1 / tDouble)\n  const nWeek = nToday * 2 ** (7 / tDouble)\n\n  const pToday = nToday / population\n  const pTomorrow = nTomorrow / population\n  const pWeek = nWeek / population\n\n  return {\n    today: 1 - (1 - pToday) ** employees,\n    tomorrow: 1 - (1 - pTomorrow) ** employees,\n    week: 1 - (1 - pWeek) ** employees,\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport ThemeProvider from './components/ThemeProvider/ThemeProvider'\nimport Layout from './components/Layout/Layout'\n\nimport Info from './scenes/Info/Info'\nimport NotFound from './scenes/NotFound/NotFound'\nimport Recommendations from './scenes/Recommendations/Recommendations'\n\nReactDOM.render((\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <ThemeProvider>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Info />\n          </Route>\n          <Route path=\"/recommendations\" exact>\n            <Recommendations />\n          </Route>\n\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Layout>\n    </ThemeProvider>\n  </BrowserRouter>\n), document.getElementById('root'))\n","/* eslint-disable max-len */\nimport React from 'react'\nimport { Typography } from '@material-ui/core'\n\nexport default function Info() {\n  return (\n    <div>\n      <Typography variant=\"h2\" gutterBottom>Model Information</Typography>\n      <Typography paragraph>This model should help you and your company make a decision on whether you should open your office or send everybody home.</Typography>\n      <Typography paragraph>It‘s based on how many cases are probably in your area, and the likelihood that at least one of your employees catches it. It has lots of assumptions, but all the data is here so you can play with the assumptions to adapt them to your situation. You only <strong>need</strong> to make changes to the Recommendations tab; the rest are data inputs that you can change to adjust the model.</Typography>\n      <Typography paragraph>Please leave comments to improve it.</Typography>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { Button, Typography } from '@material-ui/core'\n\nexport default function NotFound() {\n  return (\n    <div>\n      <Typography variant=\"h2\" gutterBottom>Oops! Page Not Found</Typography>\n      <Typography paragraph>\n        Something went wrong. The page you are looking for could not be found.\n      </Typography>\n      <Typography paragraph>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={RouterLink}\n          to=\"/\"\n        >\n          Go Home\n        </Button>\n      </Typography>\n    </div>\n  )\n}\n"],"sourceRoot":""}